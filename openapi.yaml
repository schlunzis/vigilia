openapi: 3.0.3
info:
  title: Vigilia
  description: API for the Vigilia Service
  version: 1.0.0

servers:
  - url: 'http://localhost:54913/api'

paths:
  /index:
    post:
      summary: Index new files
      description: Index new files
      operationId: IndexFiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Indexing successful
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /search:
    post:
      summary: Search for files
      description: Search for files
      operationId: SearchFiles
      parameters:
        - name: pageNumber
          in: query
          description: Page number
          required: false
          schema:
            default: 0
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          required: false
          schema:
            default: 20
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Search successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/searchResult'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /models:
    post:
      summary: Add a new model
      description: Adds a new model specified by the path to the model file as well as an identifier for future reference
      operationId: addModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - model
              properties:
                model:
                  $ref: '#/components/schemas/model'
                reindex:
                  type: boolean
                  default: false
      responses:
        '200':
          description: Registration successful
        '400':
          description: Bad request
        '500':
          description: Internal server error
    delete:
      summary: Remove a model
      description: removes a model specified by the model name
      operationId: removeModel
      parameters:
        - name: modelName
          in: query
          description: Model name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion successful
        '400':
          description: Bad request
        '500':
          description: Internal server error
    get:
      summary: List all models
      description: Lists all registered models.
      operationId: listModels
      responses:
        '200':
          description: Get successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/model'
        '500':
          description: Internal server error

components:
  schemas:
    searchResult:
      type: object
      properties:
        path:
          type: string
        text:
          type: string
        score:
          type: number
          format: double
    model:
      type: object
      required:
        - name
        - modelPath
        - tokenizerPath
      properties:
        name:
          type: string
          maxLength: 50
          minLength: 1
        modelPath:
          type: string
          maxLength: 4096
        tokenizerPath:
          type: string
          maxLength: 4096